/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 .\sci_fi_monitor.glb --transform 
Files: .\sci_fi_monitor.glb [448.16KB] > D:\UpWork\Portfolio\Nextjs-Creative-Portfolio-Starter-Code-Files\public\models\gamreReady-transformed.glb [136.09KB] (70%)
Author: carlin.chu (https://sketchfab.com/carlin.chu)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sci-fi-monitor-cc2f49493806480e95faeef4042f206c
Title: sci fi monitor🖥️
*/
'use client'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from "@react-three/fiber";

export default function SoftwareModel(props) {
  const group = React.useRef()
  const { nodes, materials, animations } = useGLTF('/models/gamreReady-transformed.glb')
  const { actions } = useAnimations(animations, group)

  useFrame((state) => {
    const elapsedTime = state.clock.elapsedTime;  
    group.current.position.y = -1.5 + Math.sin(elapsedTime) * 0.15;  
  });
  return (
    <group
      {...props}
      ref={group}
      dispose={null}
      position={[0, -1.5, 0]} // Initial position
      scale={[1.0,0.9, 0.56]} // Uniform scaling
      rotation={[0.5, 0, 0]} // Optional rotation
    >
      <mesh geometry={nodes.Plane002_digital_displays_0.geometry} material={materials.digital_displays} position={[0, 0.289, 3.122]} rotation={[-1.469, 0, 0]} />
      <mesh geometry={nodes.Plane002_digital_display_sides_0.geometry} material={materials.digital_display_sides} position={[0, 0.289, 3.122]} rotation={[-1.469, 0, 0]} />
      <mesh geometry={nodes.Circle_metal_2_0.geometry} material={materials.metal_2} position={[0, 0, -0.948]} rotation={[0, Math.PI / 2, 0]} scale={1.238} />
      <mesh geometry={nodes.Circle_metal_1_0.geometry} material={materials.metal_1} position={[0, 0, -0.948]} rotation={[0, Math.PI / 2, 0]} scale={1.238} />
    </group>
  )
}

useGLTF.preload('/models/gamreReady-transformed.glb')
